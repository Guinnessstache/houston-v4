{"remainingRequest":"/Users/stevannesovic/Sites/houston-v4/node_modules/thread-loader/dist/cjs.js!/Users/stevannesovic/Sites/houston-v4/node_modules/babel-loader/lib/index.js!/Users/stevannesovic/Sites/houston-v4/node_modules/eslint-loader/index.js??ref--13-0!/Users/stevannesovic/Sites/houston-v4/src/Utilities.js","dependencies":[{"path":"/Users/stevannesovic/Sites/houston-v4/src/Utilities.js","mtime":1576750174854},{"path":"/Users/stevannesovic/Sites/houston-v4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/stevannesovic/Sites/houston-v4/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/stevannesovic/Sites/houston-v4/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/stevannesovic/Sites/houston-v4/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/stevannesovic/Sites/houston-v4/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as profileAbi from './abi/profile.json';\nimport * as erc725Abi from './abi/erc725.json';\nimport * as tokenAbi from './abi/token.json';\nimport * as profileStorageAbi from './abi/profile-storage.json';\nimport * as keccakAbi from './abi/testingutils.json';\nimport * as hubAbi from './abi/hub.json';\nwindow.profileAbi = profileAbi.default;\nwindow.erc725Abi = erc725Abi.default;\nwindow.tokenAbi = tokenAbi.default;\nwindow.profileStorageAbi = profileStorageAbi.default;\nwindow.keccakAbi = keccakAbi.default;\nexport default {\n  getTransactionReceipt: function () {\n    var _getTransactionReceipt = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(hash) {\n      var receipt;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              receipt = null;\n\n            case 1:\n              if (!(receipt === null)) {\n                _context.next = 9;\n                break;\n              }\n\n              _context.next = 4;\n              return this.getTransactionReceiptPromise(hash);\n\n            case 4:\n              receipt = _context.sent;\n              _context.next = 7;\n              return this.wait(1000);\n\n            case 7:\n              _context.next = 1;\n              break;\n\n            case 9:\n              return _context.abrupt(\"return\", receipt);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function getTransactionReceipt(_x) {\n      return _getTransactionReceipt.apply(this, arguments);\n    }\n\n    return getTransactionReceipt;\n  }(),\n  wait: function wait(milliseconds) {\n    var start = new Date().getTime();\n\n    for (var i = 0; i < 1e7; i++) {\n      if (new Date().getTime() - start > milliseconds) {\n        break;\n      }\n    }\n  },\n  getTransactionReceiptPromise: function getTransactionReceiptPromise(hash) {\n    return new Promise(function (resolve, reject) {\n      window.eth.getTransactionReceipt(hash).then(function (data) {\n        resolve(data);\n      }).catch(function (e) {\n        reject(e);\n      });\n    });\n  },\n  buildNodeSocketUrl: function buildNodeSocketUrl(credentials) {\n    if (!('inputIp' in credentials) || !('inputPort' in credentials) || !('secured' in credentials)) {\n      throw Error(\"Invalid credentials object. \".concat(JSON.stringify(credentials)));\n    }\n\n    if (credentials.secured) {\n      return \"https://\".concat(credentials.inputIp, \":\").concat(credentials.inputPort);\n    }\n\n    return \"http://\".concat(credentials.inputIp, \":\").concat(credentials.inputPort);\n  },\n  buildNodeApiUrl: function buildNodeApiUrl(credentials, config) {\n    if (!('inputIp' in credentials) || !('inputPort' in credentials) || !('secured' in credentials)) {\n      throw Error(\"Invalid credentials object. \".concat(JSON.stringify(credentials)));\n    }\n\n    if (!('node_rpc_port' in config)) {\n      throw Error('Node RPC port is missing in configuration.');\n    }\n\n    if (credentials.secured) {\n      return \"https://\".concat(credentials.inputIp, \":\").concat(config.node_rpc_port);\n    }\n\n    return \"http://\".concat(credentials.inputIp, \":\").concat(config.node_rpc_port);\n  },\n  connectToMainnet: function connectToMainnet() {\n    window.hubAddress = '0xE92dCa9Fe0F079D582a68ca8C55fb7BDa211111';\n    window.keccakAddress = '0xfd010324268fec8868c663ce2cde2de8cb7d832a';\n\n    if (typeof web3 !== 'undefined' && window.screen.width > 770) {\n      // eslint-disable-next-line\n      window.eth = new window.Eth(web3.currentProvider);\n    } else if (window.screen.width <= 770) {\n      window.eth = new window.Eth(new window.Eth.HttpProvider('https://mainnet.infura.io/v3/f8c3858f892d4199840f5354cc954713'));\n    } else {\n      alert('Please install Metamask');\n    }\n\n    try {\n      window.hub = window.eth.contract(hubAbi.default).at(window.hubAddress);\n      window.ethereum.enable();\n    } catch (err) {\n      console.log(err);\n    }\n  },\n  connectToTestnet: function connectToTestnet() {\n    window.hubAddress = '0xE92dCa9Fe0F079D582a68ca8C55fb7BDa2558F2c';\n    window.keccakAddress = '0xfd010324268fec8868c663ce2cde2de8cb7d832a';\n\n    if (typeof web3 !== 'undefined' && window.screen.width > 770) {\n      // eslint-disable-next-line\n      window.eth = new window.Eth(web3.currentProvider);\n    } else if (window.screen.width <= 770) {\n      window.eth = new window.Eth(new window.Eth.HttpProvider('https://mainnet.infura.io/v3/f8c3858f892d4199840f5354cc954713'));\n    } else {\n      alert('Please install Metamask');\n    }\n\n    try {\n      window.hub = window.eth.contract(hubAbi.default).at(window.hubAddress);\n      window.ethereum.enable();\n    } catch (err) {\n      console.log(err);\n    }\n  }\n};",{"version":3,"sources":["/Users/stevannesovic/Sites/houston-v4/src/Utilities.js"],"names":["profileAbi","erc725Abi","tokenAbi","profileStorageAbi","keccakAbi","hubAbi","window","default","getTransactionReceipt","hash","receipt","getTransactionReceiptPromise","wait","milliseconds","start","Date","getTime","i","Promise","resolve","reject","eth","then","data","catch","e","buildNodeSocketUrl","credentials","Error","JSON","stringify","secured","inputIp","inputPort","buildNodeApiUrl","config","node_rpc_port","connectToMainnet","hubAddress","keccakAddress","web3","screen","width","Eth","currentProvider","HttpProvider","alert","hub","contract","at","ethereum","enable","err","console","log","connectToTestnet"],"mappings":"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","sourcesContent":["import * as profileAbi from './abi/profile.json';\nimport * as erc725Abi from './abi/erc725.json';\nimport * as tokenAbi from './abi/token.json';\nimport * as profileStorageAbi from './abi/profile-storage.json';\nimport * as keccakAbi from './abi/testingutils.json';\nimport * as hubAbi from './abi/hub.json';\n\nwindow.profileAbi = profileAbi.default;\nwindow.erc725Abi = erc725Abi.default;\nwindow.tokenAbi = tokenAbi.default;\nwindow.profileStorageAbi = profileStorageAbi.default;\nwindow.keccakAbi = keccakAbi.default;\n\n\nexport default {\n  async getTransactionReceipt(hash) {\n    let receipt = null;\n    while (receipt === null) {\n      // eslint-disable-next-line\n      receipt = await this.getTransactionReceiptPromise(hash);\n      // eslint-disable-next-line\n      await this.wait(1000);\n    }\n    return receipt;\n  },\n\n  wait(milliseconds) {\n    const start = new Date().getTime();\n    for (let i = 0; i < 1e7; i++) {\n      if ((new Date().getTime() - start) > milliseconds) {\n        break;\n      }\n    }\n  },\n\n  getTransactionReceiptPromise(hash) {\n    return new Promise((resolve, reject) => {\n      window.eth.getTransactionReceipt(hash)\n        .then((data) => {\n          resolve(data);\n        }).catch((e) => {\n          reject(e);\n        });\n    });\n  },\n\n  buildNodeSocketUrl: (credentials) => {\n    if (!('inputIp' in credentials) || !('inputPort' in credentials)\n        || !('secured' in credentials)) {\n      throw Error(`Invalid credentials object. ${JSON.stringify(credentials)}`);\n    }\n\n    if (credentials.secured) {\n      return `https://${credentials.inputIp}:${credentials.inputPort}`;\n    }\n    return `http://${credentials.inputIp}:${credentials.inputPort}`;\n  },\n\n  buildNodeApiUrl: (credentials, config) => {\n    if (!('inputIp' in credentials) || !('inputPort' in credentials)\n        || !('secured' in credentials)) {\n      throw Error(`Invalid credentials object. ${JSON.stringify(credentials)}`);\n    }\n\n    if (!('node_rpc_port' in config)) {\n      throw Error('Node RPC port is missing in configuration.');\n    }\n\n    if (credentials.secured) {\n      return `https://${credentials.inputIp}:${config.node_rpc_port}`;\n    }\n    return `http://${credentials.inputIp}:${config.node_rpc_port}`;\n  },\n\n  connectToMainnet() {\n    window.hubAddress = '0xE92dCa9Fe0F079D582a68ca8C55fb7BDa211111';\n    window.keccakAddress = '0xfd010324268fec8868c663ce2cde2de8cb7d832a';\n\n    if (typeof web3 !== 'undefined' && window.screen.width > 770) {\n      // eslint-disable-next-line\n      window.eth = new window.Eth(web3.currentProvider);\n    } else if (window.screen.width <= 770) {\n      window.eth = new window.Eth(new window.Eth.HttpProvider('https://mainnet.infura.io/v3/f8c3858f892d4199840f5354cc954713'));\n    } else {\n      alert('Please install Metamask');\n    }\n    try {\n      window.hub = window.eth.contract(hubAbi.default).at(window.hubAddress);\n      window.ethereum.enable();\n    } catch (err) {\n      console.log(err);\n    }\n  },\n\n  connectToTestnet() {\n    window.hubAddress = '0xE92dCa9Fe0F079D582a68ca8C55fb7BDa2558F2c';\n    window.keccakAddress = '0xfd010324268fec8868c663ce2cde2de8cb7d832a';\n\n    if (typeof web3 !== 'undefined' && window.screen.width > 770) {\n      // eslint-disable-next-line\n      window.eth = new window.Eth(web3.currentProvider);\n    } else if (window.screen.width <= 770) {\n      window.eth = new window.Eth(new window.Eth.HttpProvider('https://mainnet.infura.io/v3/f8c3858f892d4199840f5354cc954713'));\n    } else {\n      alert('Please install Metamask');\n    }\n    try {\n      window.hub = window.eth.contract(hubAbi.default).at(window.hubAddress);\n      window.ethereum.enable();\n    } catch (err) {\n      console.log(err);\n    }\n  },\n};\n"]}]}