{"remainingRequest":"/Users/nikitaabrashkin/Sites/houston-v4/node_modules/thread-loader/dist/cjs.js!/Users/nikitaabrashkin/Sites/houston-v4/node_modules/babel-loader/lib/index.js!/Users/nikitaabrashkin/Sites/houston-v4/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/nikitaabrashkin/Sites/houston-v4/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nikitaabrashkin/Sites/houston-v4/src/components/Jobs.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nikitaabrashkin/Sites/houston-v4/src/components/Jobs.vue","mtime":1577121315635},{"path":"/Users/nikitaabrashkin/Sites/houston-v4/node_modules/cache-loader/dist/cjs.js","mtime":1576674621227},{"path":"/Users/nikitaabrashkin/Sites/houston-v4/node_modules/thread-loader/dist/cjs.js","mtime":1576674627302},{"path":"/Users/nikitaabrashkin/Sites/houston-v4/node_modules/babel-loader/lib/index.js","mtime":1576674620772},{"path":"/Users/nikitaabrashkin/Sites/houston-v4/node_modules/cache-loader/dist/cjs.js","mtime":1576674621227},{"path":"/Users/nikitaabrashkin/Sites/houston-v4/node_modules/vue-loader/lib/index.js","mtime":1576674627565}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  props: ['submitted'],\n  name: 'Jobs',\n  created: function created() {},\n  mounted: function mounted() {\n    if (this.submitted) {\n      this.$socket.emit('get-holding');\n      this.$socket.emit('get-replicated');\n      this.$socket.emit('get-bids');\n      this.$socket.emit('get-read');\n\n      if (this.holding_data === []) {\n        this.loading = true;\n      } else {\n        this.loading = false;\n      }\n\n      if (this.replicated_data === []) {\n        this.loading = true;\n      } else {\n        this.loading = false;\n      }\n\n      if (this.read_data === []) {\n        this.loading = true;\n      } else {\n        this.loading = false;\n      }\n\n      this.headline = 'Current Bids';\n      this.headparagraph = 'This is the overview of the current bids your node has submitted to open offers.';\n    }\n  },\n  sockets: {\n    holding: function holding(data) {\n      var _this = this;\n\n      this.holding_data = data;\n      this.holding_data.forEach(function (row, index) {\n        var importIdPerHolding = _this.holding_data[index].data_set_id;\n        var importIdHash = importIdPerHolding.substring(0, 15);\n        var wrapper = document.createElement('div');\n        var slikaHTml = jazzicon(30, Web3Utils.hexToNumber(importIdHash));\n        wrapper.appendChild(slikaHTml);\n        _this.holding_data[index].slika = wrapper.innerHTML;\n        var colorMapping = {\n          0: 'Red',\n          1: 'Green',\n          2: 'Blue'\n        };\n        _this.holding_data[index].color = colorMapping[_this.holding_data[index].color];\n        _this.holding_data[index].slika = wrapper.innerHTML;\n\n        var lowercase = _this.holding_data[index].status.toLowerCase();\n\n        _this.holding_data[index].status = lowercase.charAt(0).toUpperCase() + lowercase.slice(1);\n      });\n    },\n    replicated: function replicated(data) {\n      var _this2 = this;\n\n      this.replicated_data = data;\n      this.replicated_data.forEach(function (row, index) {\n        var importIdPerReplicate = _this2.replicated_data[index].data_set_id;\n        var dvWalletPerReplicate = _this2.replicated_data[index].id;\n        var importIdHash = importIdPerReplicate.substring(0, 15);\n        var wrapper = document.createElement('div');\n        var slikaHTml = jazzicon(30, Web3Utils.hexToNumber(importIdHash));\n        wrapper.appendChild(slikaHTml);\n        _this2.replicated_data[index].slika = wrapper.innerHTML;\n\n        var lowercase = _this2.replicated_data[index].status.toLowerCase();\n\n        _this2.replicated_data[index].status = lowercase.charAt(0).toUpperCase() + lowercase.slice(1);\n\n        if (_this2.replicated_data[index].status === 'ACTIVE') {\n          _this2.active = true;\n        }\n      });\n    },\n    bids: function bids(data) {\n      var _this3 = this;\n\n      this.bids = data;\n      this.bids.forEach(function (row, index) {\n        var lowerCase = _this3.bids[index].status.replace('_', ' ').toLowerCase();\n\n        var capitalized = lowerCase.charAt(0).toUpperCase() + lowerCase.slice(1);\n        _this3.bids[index].status = capitalized;\n      });\n    },\n    jobStake: function jobStake(val) {\n      var _this4 = this;\n\n      this.holding_data.forEach(function (row, index) {\n        var importIdPerHolding = _this4.holding_data[index].id;\n\n        if (importIdPerHolding === val.import_id) {\n          _this4.stakedPerJobIndicator = false;\n          _this4.holding_data[index].staked = val.stakedAmount / 1000000000000000000;\n        }\n      });\n    },\n    holdingIncome: function holdingIncome(val) {\n      var _this5 = this;\n\n      this.holding_data.forEach(function (row, index) {\n        var importIdPerHolding = _this5.holding_data[index].id;\n\n        if (importIdPerHolding === val.import_id) {\n          _this5.incomePerJobIndicator = false;\n          _this5.holding_data[index].income = val.holdingIncome / 1000000000000000000;\n        }\n      });\n    },\n    purchaseIncome: function purchaseIncome(val) {\n      var _this6 = this;\n\n      this.holding_data.forEach(function (row, index) {\n        var importIdPerHolding = _this6.holding_data[index].id;\n\n        if (importIdPerHolding === val.import_id) {\n          _this6.earnedPerJobIndicator = false;\n          _this6.holding_data[index].earned = val.stakedAmount / 1000000000000000000;\n        }\n      });\n    }\n  },\n  data: function data() {\n    return {\n      config: '',\n      activeName: 'first',\n      active: false,\n      ident: '',\n      holding_data: [],\n      replicated_data: [],\n      read_data: [],\n      headlineCheck: '',\n      headline: '',\n      headparagraph: '',\n      stakedPerJobIndicator: true,\n      incomePerJobIndicator: true,\n      earnedPerJobIndicator: true,\n      currentBidsIndicator: false,\n      bids: [],\n      loading: true,\n      form: {\n        node_wallet: '',\n        node_private_key: '',\n        node_rpc_ip: '',\n        node_port: ''\n      }\n    };\n  },\n  watch: {\n    // call again the method if the route changes\n    $route: 'fetchData'\n  },\n  methods: {\n    handleClick: function handleClick(tab, event) {\n      this.headline = tab.label;\n\n      if (tab.label === 'Holding Data') {\n        this.headparagraph = 'This is an overview of all your current datasets being held by you for other stakeholders of the ODN testnet. Here you can monitor the specifics of each job and compensation in TRAC that you’ve received for it.';\n      } else if (tab.label === 'Pending bids') {\n        this.headparagraph = 'This is the overview of the current bids your node has submitted to open offers.';\n      } else if (tab.label === 'Replicated Data') {\n        this.headparagraph = 'This is an overview of all the datasets you’ve deployed to the ODN testnet to be replicated and stored. Here, you can monitor the cost of your files being stored on the network, ensuring immutability.';\n      }\n    },\n    viewImport: function viewImport(importId) {\n      this.$router.push({\n        name: 'visualisation',\n        params: {\n          importId: importId\n        }\n      });\n    },\n    handleClose: function handleClose(done) {\n      this.$confirm('Are you sure to close this dialog?').then(function (_) {\n        done();\n      }).catch(function (_) {});\n    }\n  },\n  filters: {\n    realTokenAmount: function realTokenAmount(val) {\n      return val / 1000000000000000000;\n    }\n  }\n};",{"version":3,"sources":["Jobs.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwPA,eAAA;AACA,EAAA,KAAA,EAAA,CAAA,WAAA,CADA;AAEA,EAAA,IAAA,EAAA,MAFA;AAGA,EAAA,OAHA,qBAGA,CAEA,CALA;AAMA,EAAA,OANA,qBAMA;AACA,QAAA,KAAA,SAAA,EAAA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,aAAA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,gBAAA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,UAAA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,UAAA;;AAEA,UAAA,KAAA,YAAA,KAAA,EAAA,EAAA;AACA,aAAA,OAAA,GAAA,IAAA;AACA,OAFA,MAEA;AACA,aAAA,OAAA,GAAA,KAAA;AACA;;AAEA,UAAA,KAAA,eAAA,KAAA,EAAA,EAAA;AACA,aAAA,OAAA,GAAA,IAAA;AACA,OAFA,MAEA;AACA,aAAA,OAAA,GAAA,KAAA;AACA;;AAEA,UAAA,KAAA,SAAA,KAAA,EAAA,EAAA;AACA,aAAA,OAAA,GAAA,IAAA;AACA,OAFA,MAEA;AACA,aAAA,OAAA,GAAA,KAAA;AACA;;AAEA,WAAA,QAAA,GAAA,cAAA;AACA,WAAA,aAAA,GAAA,kFAAA;AACA;AACA,GAlCA;AAmCA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,mBACA,IADA,EACA;AAAA;;AACA,WAAA,YAAA,GAAA,IAAA;AAEA,WAAA,YAAA,CAAA,OAAA,CAAA,UAAA,GAAA,EAAA,KAAA,EAAA;AACA,YAAA,kBAAA,GAAA,KAAA,CAAA,YAAA,CAAA,KAAA,EAAA,WAAA;AAEA,YAAA,YAAA,GAAA,kBAAA,CAAA,SAAA,CAAA,CAAA,EAAA,EAAA,CAAA;AACA,YAAA,OAAA,GAAA,QAAA,CAAA,aAAA,CAAA,KAAA,CAAA;AACA,YAAA,SAAA,GAAA,QAAA,CAAA,EAAA,EAAA,SAAA,CAAA,WAAA,CAAA,YAAA,CAAA,CAAA;AACA,QAAA,OAAA,CAAA,WAAA,CAAA,SAAA;AACA,QAAA,KAAA,CAAA,YAAA,CAAA,KAAA,EAAA,KAAA,GAAA,OAAA,CAAA,SAAA;AAEA,YAAA,YAAA,GAAA;AACA,aAAA,KADA;AAEA,aAAA,OAFA;AAGA,aAAA;AAHA,SAAA;AAMA,QAAA,KAAA,CAAA,YAAA,CAAA,KAAA,EAAA,KAAA,GAAA,YAAA,CAAA,KAAA,CAAA,YAAA,CAAA,KAAA,EAAA,KAAA,CAAA;AACA,QAAA,KAAA,CAAA,YAAA,CAAA,KAAA,EAAA,KAAA,GAAA,OAAA,CAAA,SAAA;;AAEA,YAAA,SAAA,GAAA,KAAA,CAAA,YAAA,CAAA,KAAA,EAAA,MAAA,CAAA,WAAA,EAAA;;AACA,QAAA,KAAA,CAAA,YAAA,CAAA,KAAA,EAAA,MAAA,GAAA,SAAA,CAAA,MAAA,CAAA,CAAA,EACA,WADA,KACA,SAAA,CAAA,KAAA,CAAA,CAAA,CADA;AAEA,OArBA;AAsBA,KA1BA;AA2BA,IAAA,UA3BA,sBA2BA,IA3BA,EA2BA;AAAA;;AACA,WAAA,eAAA,GAAA,IAAA;AAEA,WAAA,eAAA,CAAA,OAAA,CAAA,UAAA,GAAA,EAAA,KAAA,EAAA;AACA,YAAA,oBAAA,GAAA,MAAA,CAAA,eAAA,CAAA,KAAA,EAAA,WAAA;AACA,YAAA,oBAAA,GAAA,MAAA,CAAA,eAAA,CAAA,KAAA,EAAA,EAAA;AAEA,YAAA,YAAA,GAAA,oBAAA,CAAA,SAAA,CAAA,CAAA,EAAA,EAAA,CAAA;AACA,YAAA,OAAA,GAAA,QAAA,CAAA,aAAA,CAAA,KAAA,CAAA;AACA,YAAA,SAAA,GAAA,QAAA,CAAA,EAAA,EAAA,SAAA,CAAA,WAAA,CAAA,YAAA,CAAA,CAAA;AACA,QAAA,OAAA,CAAA,WAAA,CAAA,SAAA;AACA,QAAA,MAAA,CAAA,eAAA,CAAA,KAAA,EAAA,KAAA,GAAA,OAAA,CAAA,SAAA;;AAEA,YAAA,SAAA,GAAA,MAAA,CAAA,eAAA,CAAA,KAAA,EAAA,MAAA,CAAA,WAAA,EAAA;;AACA,QAAA,MAAA,CAAA,eAAA,CAAA,KAAA,EAAA,MAAA,GAAA,SAAA,CAAA,MAAA,CAAA,CAAA,EACA,WADA,KACA,SAAA,CAAA,KAAA,CAAA,CAAA,CADA;;AAGA,YAAA,MAAA,CAAA,eAAA,CAAA,KAAA,EAAA,MAAA,KAAA,QAAA,EAAA;AACA,UAAA,MAAA,CAAA,MAAA,GAAA,IAAA;AACA;AACA,OAjBA;AAkBA,KAhDA;AAiDA,IAAA,IAjDA,gBAiDA,IAjDA,EAiDA;AAAA;;AACA,WAAA,IAAA,GAAA,IAAA;AAEA,WAAA,IAAA,CAAA,OAAA,CAAA,UAAA,GAAA,EAAA,KAAA,EAAA;AACA,YAAA,SAAA,GAAA,MAAA,CAAA,IAAA,CAAA,KAAA,EAAA,MAAA,CAAA,OAAA,CAAA,GAAA,EAAA,GAAA,EACA,WADA,EAAA;;AAEA,YAAA,WAAA,GAAA,SAAA,CAAA,MAAA,CAAA,CAAA,EACA,WADA,KACA,SAAA,CAAA,KAAA,CAAA,CAAA,CADA;AAEA,QAAA,MAAA,CAAA,IAAA,CAAA,KAAA,EAAA,MAAA,GAAA,WAAA;AACA,OANA;AAOA,KA3DA;AA4DA,IAAA,QA5DA,oBA4DA,GA5DA,EA4DA;AAAA;;AACA,WAAA,YAAA,CAAA,OAAA,CAAA,UAAA,GAAA,EAAA,KAAA,EAAA;AACA,YAAA,kBAAA,GAAA,MAAA,CAAA,YAAA,CAAA,KAAA,EAAA,EAAA;;AACA,YAAA,kBAAA,KAAA,GAAA,CAAA,SAAA,EAAA;AACA,UAAA,MAAA,CAAA,qBAAA,GAAA,KAAA;AACA,UAAA,MAAA,CAAA,YAAA,CAAA,KAAA,EAAA,MAAA,GAAA,GAAA,CAAA,YAAA,GAAA,mBAAA;AACA;AACA,OANA;AAOA,KApEA;AAqEA,IAAA,aArEA,yBAqEA,GArEA,EAqEA;AAAA;;AACA,WAAA,YAAA,CAAA,OAAA,CAAA,UAAA,GAAA,EAAA,KAAA,EAAA;AACA,YAAA,kBAAA,GAAA,MAAA,CAAA,YAAA,CAAA,KAAA,EAAA,EAAA;;AACA,YAAA,kBAAA,KAAA,GAAA,CAAA,SAAA,EAAA;AACA,UAAA,MAAA,CAAA,qBAAA,GAAA,KAAA;AACA,UAAA,MAAA,CAAA,YAAA,CAAA,KAAA,EAAA,MAAA,GAAA,GAAA,CAAA,aAAA,GAAA,mBAAA;AACA;AACA,OANA;AAOA,KA7EA;AA8EA,IAAA,cA9EA,0BA8EA,GA9EA,EA8EA;AAAA;;AACA,WAAA,YAAA,CAAA,OAAA,CAAA,UAAA,GAAA,EAAA,KAAA,EAAA;AACA,YAAA,kBAAA,GAAA,MAAA,CAAA,YAAA,CAAA,KAAA,EAAA,EAAA;;AACA,YAAA,kBAAA,KAAA,GAAA,CAAA,SAAA,EAAA;AACA,UAAA,MAAA,CAAA,qBAAA,GAAA,KAAA;AACA,UAAA,MAAA,CAAA,YAAA,CAAA,KAAA,EAAA,MAAA,GAAA,GAAA,CAAA,YAAA,GAAA,mBAAA;AACA;AACA,OANA;AAOA;AAtFA,GAnCA;AA2HA,EAAA,IA3HA,kBA2HA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,EADA;AAEA,MAAA,UAAA,EAAA,OAFA;AAGA,MAAA,MAAA,EAAA,KAHA;AAIA,MAAA,KAAA,EAAA,EAJA;AAKA,MAAA,YAAA,EAAA,EALA;AAMA,MAAA,eAAA,EAAA,EANA;AAOA,MAAA,SAAA,EAAA,EAPA;AAQA,MAAA,aAAA,EAAA,EARA;AASA,MAAA,QAAA,EAAA,EATA;AAUA,MAAA,aAAA,EAAA,EAVA;AAWA,MAAA,qBAAA,EAAA,IAXA;AAYA,MAAA,qBAAA,EAAA,IAZA;AAaA,MAAA,qBAAA,EAAA,IAbA;AAcA,MAAA,oBAAA,EAAA,KAdA;AAeA,MAAA,IAAA,EAAA,EAfA;AAgBA,MAAA,OAAA,EAAA,IAhBA;AAiBA,MAAA,IAAA,EAAA;AACA,QAAA,WAAA,EAAA,EADA;AAEA,QAAA,gBAAA,EAAA,EAFA;AAGA,QAAA,WAAA,EAAA,EAHA;AAIA,QAAA,SAAA,EAAA;AAJA;AAjBA,KAAA;AAwBA,GApJA;AAqJA,EAAA,KAAA,EAAA;AACA;AACA,IAAA,MAAA,EAAA;AAFA,GArJA;AAyJA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,uBACA,GADA,EACA,KADA,EACA;AACA,WAAA,QAAA,GAAA,GAAA,CAAA,KAAA;;AACA,UAAA,GAAA,CAAA,KAAA,KAAA,cAAA,EAAA;AACA,aAAA,aAAA,GAAA,oNAAA;AACA,OAFA,MAEA,IAAA,GAAA,CAAA,KAAA,KAAA,cAAA,EAAA;AACA,aAAA,aAAA,GAAA,kFAAA;AACA,OAFA,MAEA,IAAA,GAAA,CAAA,KAAA,KAAA,iBAAA,EAAA;AACA,aAAA,aAAA,GAAA,0MAAA;AACA;AACA,KAVA;AAWA,IAAA,UAXA,sBAWA,QAXA,EAWA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA;AACA,QAAA,IAAA,EAAA,eADA;AAEA,QAAA,MAAA,EAAA;AAAA,UAAA,QAAA,EAAA;AAAA;AAFA,OAAA;AAIA,KAhBA;AAiBA,IAAA,WAjBA,uBAiBA,IAjBA,EAiBA;AACA,WAAA,QAAA,CAAA,oCAAA,EACA,IADA,CACA,UAAA,CAAA,EAAA;AACA,QAAA,IAAA;AACA,OAHA,EAIA,KAJA,CAIA,UAAA,CAAA,EAAA,CACA,CALA;AAMA;AAxBA,GAzJA;AAmLA,EAAA,OAAA,EAAA;AACA,IAAA,eADA,2BACA,GADA,EACA;AACA,aAAA,GAAA,GAAA,mBAAA;AACA;AAHA;AAnLA,CAAA","sourcesContent":["<template>\n    <div class=\"wrapper container jobs-wrapper\">\n        <div class=\"el-row\">\n            <div class=\"el-col\">\n                <h1 class=\"jobs\">Job Overview</h1>\n            </div>\n        </div>\n        <el-row>\n            <el-col class=\"second-headline\" :span=\"16\">\n                <h2>Your node’s current operations, like holding jobs, replicated data and currently active bids, are\n                    visible here.</h2>\n            </el-col>\n        </el-row>\n        <el-row>\n            <el-col>\n                <el-tabs type=\"card\" @tab-click=\"handleClick\">\n                    <el-tab-pane label=\"Pending bids\" class=\"tab-pane\">\n                        <el-row>\n                            <el-col :span=\"24\">\n                                <data-tables\n                                        :data=\"bids\"\n                                        style=\"width: 100%\"\n                                        v-loading=\"loading\">\n                                    <el-table-column type=\"expand\" fixed>\n                                        <template slot-scope=\"props\">\n                                            <div class=\"m-l-imports\">\n                                                <h2 class=\"h2-imports\"><strong>Job information</strong></h2>\n                                                <el-row class=\"imports-row\">\n                                                    <el-col :span=\"20\">\n                                                        <el-row class=\"info-block\">\n                                                            <el-col :span=\"5\" class=\"left-info-block\">\n                                                                Price (TRAC)\n                                                            </el-col>\n                                                            <el-col :span=\"20\" class=\"right-block-info\"\n                                                                    v-if=\"currentBidsIndicator\">\n                                                                <i class=\"el-icon-loading\"></i>\n                                                            </el-col>\n                                                            <el-col :span=\"12\" class=\"right-block-info\" v-else>\n                                                                {{ props.row.token_amount|realTokenAmount }}\n                                                            </el-col>\n                                                        </el-row>\n                                                        <el-row class=\"info-block\">\n                                                            <el-col :span=\"5\" class=\"left-info-block\">\n                                                                Offer ID\n                                                            </el-col>\n                                                            <el-col :span=\"12\" class=\"right-block-info\"\n                                                                    v-if=\"currentBidsIndicator\">\n                                                                <i class=\"el-icon-loading\"></i>\n                                                            </el-col>\n                                                            <el-col :span=\"12\" class=\"right-block-info\" v-else>\n                                                                {{ props.row.offer_id }}\n                                                            </el-col>\n                                                        </el-row>\n                                                        <el-row class=\"info-block\">\n                                                            <el-col :span=\"5\" class=\"left-info-block\">\n                                                                DC ID\n                                                            </el-col>\n                                                            <el-col :span=\"12\" class=\"right-block-info\"\n                                                                    v-if=\"currentBidsIndicator\">\n                                                                <i class=\"el-icon-loading\"></i>\n                                                            </el-col>\n                                                            <el-col :span=\"12\" class=\"right-block-info\" v-else>\n                                                                {{ props.row.dc_node_id }}\n                                                            </el-col>\n                                                        </el-row>\n                                                        <el-row class=\"info-block\">\n                                                            <el-col :span=\"5\" class=\"left-info-block\">\n                                                                Data size (bytes)\n                                                            </el-col>\n                                                            <el-col :span=\"12\" class=\"right-block-info\"\n                                                                    v-if=\"currentBidsIndicator\">\n                                                                <i class=\"el-icon-loading\"></i>\n                                                            </el-col>\n                                                            <el-col :span=\"12\" class=\"right-block-info\" v-else>\n                                                                {{ props.row.data_size_in_bytes }}\n                                                            </el-col>\n                                                        </el-row>\n                                                    </el-col>\n                                                </el-row>\n                                            </div>\n                                        </template>\n                                    </el-table-column>\n                                    <el-table-column\n                                            :show-overflow-tooltip=\"true\"\n                                            prop=\"offer_id\"\n                                            label=\"Offer ID\"\n                                            width=\"200\">\n                                    </el-table-column>\n                                    <el-table-column\n                                            :show-overflow-tooltip=\"true\"\n                                            prop=\"holding_time_in_minutes\"\n                                            label=\"Holding time (minutes)\"\n                                            width=\"200\">\n                                    </el-table-column>\n                                    <el-table-column\n                                            :show-overflow-tooltip=\"true\"\n                                            prop=\"token_amount\"\n                                            label=\"Potential reward (TRAC)\">\n                                        <template slot-scope=\"scope\">\n                                            {{scope.row.token_amount|realTokenAmount}}\n                                        </template>\n                                    </el-table-column>\n                                    <el-table-column\n                                            prop=\"status\"\n                                            label=\"Status\"\n                                            class=\"status-text\">\n                                    </el-table-column>\n                                </data-tables>\n                            </el-col>\n                        </el-row>\n                    </el-tab-pane>\n                    <el-tab-pane label=\"Holding Data\">\n                        <el-row>\n                            <el-col :span=\"24\">\n                                <data-tables\n                                        :data=\"holding_data\"\n                                        style=\"width: 100%;\"\n                                        v-loading=\"loading\"\n\n                                >\n                                    <el-table-column type=\"expand\" fixed>\n\n                                        <template slot-scope=\"props\">\n                                            <div class=\"m-l-imports\">\n                                                <h2 class=\"h2-imports\"><strong>Financials</strong></h2>\n                                                <el-row class=\"imports-row\">\n                                                    <el-col :span=\"18\">\n                                                        <el-row class=\"info-block\">\n                                                            <el-col :span=\"8\" class=\"left-info-block\">\n                                                                Staked for this job (TRAC)\n                                                            </el-col>\n                                                            <el-col :span=\"12\" class=\"right-block-info\">\n                                                                {{ props.row.staked_amount| realTokenAmount }}\n                                                            </el-col>\n                                                        </el-row>\n                                                        <el-row class=\"info-block\">\n                                                            <el-col :span=\"8\" class=\"left-info-block\">\n                                                                Currently paid (TRAC)\n                                                            </el-col>\n                                                            <el-col :span=\"12\" class=\"right-block-info\">\n                                                                {{ props.row.paid_amount |realTokenAmount}}\n                                                            </el-col>\n                                                        </el-row>\n                                                    </el-col>\n                                                </el-row>\n                                            </div>\n                                        </template>\n                                    </el-table-column>\n                                    <el-table-column\n                                            label=\"\"\n                                            width=\"60\">\n                                        <template slot-scope=\"props\">\n                                            <div class=\"hexContainer\" id=\"hexContainerID2\">\n                                                <div v-html=\"props.row.slika\"\n                                                     style=\"border-radius: 50px; overflow: hidden; padding: 0px; margin: 0px; width: 30px; height: 30px; display: inline-block; background: rgb(1, 109, 142);\">\n\n                                                </div>\n                                            </div>\n                                        </template>\n                                    </el-table-column>\n                                    <el-table-column\n                                            :show-overflow-tooltip=\"true\"\n                                            prop=\"data_set_id\"\n                                            label=\"Dataset\">\n                                    </el-table-column>\n                                    <el-table-column\n                                            :show-overflow-tooltip=\"true\"\n                                            prop=\"offer_id\"\n                                            label=\"Offer ID\">\n                                    </el-table-column>\n                                    <el-table-column\n                                            :show-overflow-tooltip=\"true\"\n                                            prop=\"source_wallet\"\n                                            label=\"Source Wallet\">\n                                    </el-table-column>\n                                    <el-table-column\n                                            :show-overflow-tooltip=\"true\"\n                                            prop=\"root_hash\"\n                                            label=\"Root Hash\">\n                                    </el-table-column>\n                                    <el-table-column\n                                            :show-overflow-tooltip=\"true\"\n                                            prop=\"color\"\n                                            label=\"Encryption color\">\n                                    </el-table-column>\n                                    <el-table-column\n                                            :show-overflow-tooltip=\"true\"\n                                            prop=\"status\"\n                                            label=\"Status\">\n                                    </el-table-column>\n                                </data-tables>\n                            </el-col>\n                        </el-row>\n                    </el-tab-pane>\n                    <el-tab-pane label=\"Replicated Data\">\n                        <el-row>\n                            <el-col :span=\"24\">\n                                <data-tables\n                                        :data=\"replicated_data\"\n                                        style=\"width: 100%\"\n                                        v-loading=\"loading\">\n                                    <el-table-column\n                                            :show-overflow-tooltip=\"true\"\n                                            prop=\"dh_id\"\n                                            label=\"Data holder\">\n                                    </el-table-column>\n                                    <el-table-column\n                                            :show-overflow-tooltip=\"true\"\n                                            label=\"\"\n                                            prop=\"data_set_id\">\n                                        <template slot-scope=\"props\">\n                                            <div class=\"hexContainer\" id=\"hexContainerID3\">\n                                                <div v-html=\"props.row.slika\"\n                                                     style=\"border-radius: 50px; overflow: hidden; padding: 0px; margin: 0px; width: 30px; height: 30px; display: inline-block; background: rgb(1, 109, 142);\">\n\n                                                </div>\n                                            </div>\n                                        </template>\n                                    </el-table-column>\n                                    <el-table-column\n                                            :show-overflow-tooltip=\"true\"\n                                            prop=\"data_set_id\"\n                                            label=\"Dataset\"\n                                            width=\"300\">\n                                    </el-table-column>\n                                    <el-table-column\n                                            :show-overflow-tooltip=\"true\"\n                                            prop=\"offer_id\"\n                                            label=\"Offer ID\">\n                                    </el-table-column>\n                                    <el-table-column\n                                            prop=\"status\"\n                                            label=\"Status\">\n                                    </el-table-column>\n                                </data-tables>\n                            </el-col>\n                        </el-row>\n                    </el-tab-pane>\n                </el-tabs>\n            </el-col>\n        </el-row>\n\n    </div>\n</template>\n\n<script>\n\n\nexport default {\n  props: ['submitted'],\n  name: 'Jobs',\n  created() {\n\n  },\n  mounted() {\n    if (this.submitted) {\n      this.$socket.emit('get-holding');\n      this.$socket.emit('get-replicated');\n      this.$socket.emit('get-bids');\n      this.$socket.emit('get-read');\n\n      if (this.holding_data === []) {\n        this.loading = true;\n      } else {\n        this.loading = false;\n      }\n\n      if (this.replicated_data === []) {\n        this.loading = true;\n      } else {\n        this.loading = false;\n      }\n\n      if (this.read_data === []) {\n        this.loading = true;\n      } else {\n        this.loading = false;\n      }\n\n      this.headline = 'Current Bids';\n      this.headparagraph = 'This is the overview of the current bids your node has submitted to open offers.';\n    }\n  },\n  sockets: {\n    holding(data) {\n      this.holding_data = data;\n\n      this.holding_data.forEach((row, index) => {\n        const importIdPerHolding = this.holding_data[index].data_set_id;\n\n        const importIdHash = importIdPerHolding.substring(0, 15);\n        const wrapper = document.createElement('div');\n        const slikaHTml = jazzicon(30, Web3Utils.hexToNumber(importIdHash));\n        wrapper.appendChild(slikaHTml);\n        this.holding_data[index].slika = wrapper.innerHTML;\n\n        const colorMapping = {\n          0: 'Red',\n          1: 'Green',\n          2: 'Blue',\n        };\n\n        this.holding_data[index].color = colorMapping[this.holding_data[index].color];\n        this.holding_data[index].slika = wrapper.innerHTML;\n\n        const lowercase = this.holding_data[index].status.toLowerCase();\n        this.holding_data[index].status = lowercase.charAt(0)\n          .toUpperCase() + lowercase.slice(1);\n      });\n    },\n    replicated(data) {\n      this.replicated_data = data;\n\n      this.replicated_data.forEach((row, index) => {\n        const importIdPerReplicate = this.replicated_data[index].data_set_id;\n        const dvWalletPerReplicate = this.replicated_data[index].id;\n\n        const importIdHash = importIdPerReplicate.substring(0, 15);\n        const wrapper = document.createElement('div');\n        const slikaHTml = jazzicon(30, Web3Utils.hexToNumber(importIdHash));\n        wrapper.appendChild(slikaHTml);\n        this.replicated_data[index].slika = wrapper.innerHTML;\n\n        const lowercase = this.replicated_data[index].status.toLowerCase();\n        this.replicated_data[index].status = lowercase.charAt(0)\n          .toUpperCase() + lowercase.slice(1);\n\n        if (this.replicated_data[index].status === 'ACTIVE') {\n          this.active = true;\n        }\n      });\n    },\n    bids(data) {\n      this.bids = data;\n\n      this.bids.forEach((row, index) => {\n        const lowerCase = this.bids[index].status.replace('_', ' ')\n          .toLowerCase();\n        const capitalized = lowerCase.charAt(0)\n          .toUpperCase() + lowerCase.slice(1);\n        this.bids[index].status = capitalized;\n      });\n    },\n    jobStake(val) {\n      this.holding_data.forEach((row, index) => {\n        const importIdPerHolding = this.holding_data[index].id;\n        if (importIdPerHolding === val.import_id) {\n          this.stakedPerJobIndicator = false;\n          this.holding_data[index].staked = val.stakedAmount / 1000000000000000000;\n        }\n      });\n    },\n    holdingIncome(val) {\n      this.holding_data.forEach((row, index) => {\n        const importIdPerHolding = this.holding_data[index].id;\n        if (importIdPerHolding === val.import_id) {\n          this.incomePerJobIndicator = false;\n          this.holding_data[index].income = val.holdingIncome / 1000000000000000000;\n        }\n      });\n    },\n    purchaseIncome(val) {\n      this.holding_data.forEach((row, index) => {\n        const importIdPerHolding = this.holding_data[index].id;\n        if (importIdPerHolding === val.import_id) {\n          this.earnedPerJobIndicator = false;\n          this.holding_data[index].earned = val.stakedAmount / 1000000000000000000;\n        }\n      });\n    },\n  },\n  data() {\n    return {\n      config: '',\n      activeName: 'first',\n      active: false,\n      ident: '',\n      holding_data: [],\n      replicated_data: [],\n      read_data: [],\n      headlineCheck: '',\n      headline: '',\n      headparagraph: '',\n      stakedPerJobIndicator: true,\n      incomePerJobIndicator: true,\n      earnedPerJobIndicator: true,\n      currentBidsIndicator: false,\n      bids: [],\n      loading: true,\n      form: {\n        node_wallet: '',\n        node_private_key: '',\n        node_rpc_ip: '',\n        node_port: '',\n      },\n    };\n  },\n  watch: {\n    // call again the method if the route changes\n    $route: 'fetchData',\n  },\n  methods: {\n    handleClick(tab, event) {\n      this.headline = tab.label;\n      if (tab.label === 'Holding Data') {\n        this.headparagraph = 'This is an overview of all your current datasets being held by you for other stakeholders of the ODN testnet. Here you can monitor the specifics of each job and compensation in TRAC that you’ve received for it.';\n      } else if (tab.label === 'Pending bids') {\n        this.headparagraph = 'This is the overview of the current bids your node has submitted to open offers.';\n      } else if (tab.label === 'Replicated Data') {\n        this.headparagraph = 'This is an overview of all the datasets you’ve deployed to the ODN testnet to be replicated and stored. Here, you can monitor the cost of your files being stored on the network, ensuring immutability.';\n      }\n    },\n    viewImport(importId) {\n      this.$router.push({\n        name: 'visualisation',\n        params: { importId },\n      });\n    },\n    handleClose(done) {\n      this.$confirm('Are you sure to close this dialog?')\n        .then((_) => {\n          done();\n        })\n        .catch((_) => {\n        });\n    },\n  },\n  filters: {\n    realTokenAmount(val) {\n      return val / 1000000000000000000;\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n    .el-table .cell {\n        overflow: hidden !important;\n        text-overflow: ellipsis !important;\n        white-space: nowrap !important;\n    }\n\n    .lead-paragraph {\n        height: 78px;\n        margin-bottom: 0px;\n        font-size: 16px;\n        font-weight: normal;\n        font-style: normal;\n        font-stretch: normal;\n        line-height: 1.5;\n        letter-spacing: normal;\n        color: #526173;\n    }\n\n    .h2-imports {\n        font-size: 12px;\n        font-weight: bold;\n        font-style: normal;\n        font-stretch: normal;\n        line-height: 2;\n        letter-spacing: 3.6px;\n        color: #1a4559;\n    }\n\n    .second-headline {\n        margin-bottom: 30px;\n\n        h2 {\n            font-family: Roboto;\n            font-size: 20px;\n            font-weight: normal;\n            font-stretch: normal;\n            font-style: normal;\n            line-height: 1.6;\n            letter-spacing: normal;\n            color: #131415;\n            text-align: left;\n        }\n    }\n\n    .left-info-block {\n        opacity: 0.5;\n        font-size: 14px;\n        font-weight: normal;\n        font-style: normal;\n        font-stretch: normal;\n        line-height: 1.14;\n        letter-spacing: normal;\n        color: #526173;\n        border-right: 1px solid #ced2d7;\n        margin-top: 4px;\n        margin-left: 5px;\n    }\n\n    .active-replicate {\n        font-size: 12px;\n        font-weight: normal;\n        font-style: normal;\n        font-stretch: normal;\n        line-height: 1.67;\n        letter-spacing: normal;\n        color: #1a4559;\n        display: flex;\n    }\n\n    .active-replicate > img {\n        margin-right: 6px;\n    }\n\n    .info-block {\n        border-radius: 4px;\n        background-color: #ffffff;\n        border: solid 1px #ced2d7;\n        margin: 10px 0;\n    }\n\n    .right-block-info {\n        font-size: 12px;\n        font-weight: bold;\n        font-style: normal;\n        font-stretch: normal;\n        line-height: 2;\n        letter-spacing: normal;\n        color: #090932;\n        margin-left: 14px;\n    }\n\n    .jobs {\n        font-family: Roboto;\n        font-size: 46px;\n        font-weight: bold;\n        font-stretch: normal;\n        font-style: normal;\n        line-height: 1.17;\n        letter-spacing: normal;\n        color: #131415;\n        padding: 40px 0 32px 0;\n        text-align: left;\n        margin-bottom: 0;\n    }\n\n    #hexContainerID > div > svg {\n        position: static !important;\n        left: inherit;\n        height: 30px;\n        width: 30px;\n    }\n\n    #hexContainerID2 > div > div > svg {\n        position: static !important;\n        left: inherit;\n        height: 30px;\n        width: 30px;\n    }\n\n    #hexContainerID3 > div > div > svg {\n        position: static !important;\n        left: inherit;\n        height: 30px;\n        width: 30px;\n    }\n\n</style>\n<style lang=\"scss\">\n    .jobs-wrapper {\n        .el-table__expand-icon > .el-icon {\n            top: 15% !important;\n            font-size: 20px;\n        }\n\n        .el-table, .el-table__expanded-cell {\n            background-color: #F6F6F6 !important;\n        }\n\n        .el-table th, .el-table tr {\n            background-color: #F6F6F6 !important;\n        }\n\n        table {\n            thead {\n                tr {\n                    background-color: #F6F6F6 !important;\n                }\n            }\n\n            tbody {\n                tr {\n                    background-color: #F6F6F6 !important;\n                }\n            }\n        }\n\n        .el-tabs__item.is-active {\n\n            border-radius: 4px;\n            background-color: #000000;\n            color: white;\n        }\n    }\n\n\n</style>\n"],"sourceRoot":"src/components"}]}