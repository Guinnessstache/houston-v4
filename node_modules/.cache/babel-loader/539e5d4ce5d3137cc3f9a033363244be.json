{"remainingRequest":"/Users/stevannesovic/Sites/houston-v4/node_modules/babel-loader/lib/index.js!/Users/stevannesovic/Sites/houston-v4/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/stevannesovic/Sites/houston-v4/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/stevannesovic/Sites/houston-v4/src/components/DepositEth.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/stevannesovic/Sites/houston-v4/src/components/DepositEth.vue","mtime":1553095967731},{"path":"/Users/stevannesovic/Sites/houston-v4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/stevannesovic/Sites/houston-v4/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/stevannesovic/Sites/houston-v4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/stevannesovic/Sites/houston-v4/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/stevannesovic/Sites/houston-v4/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  props: ['operationalWallet'],\n  data: function data() {\n    return {\n      formData: {\n        amount: 0\n      },\n      wallet: '',\n      rules: {\n        amount: [{\n          required: true,\n          message: 'Please enter amount',\n          trigger: 'blur'\n        }, {\n          min: 0.001,\n          message: 'Amount cannot be less than 0.001',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    window.eth.accounts().then(function (result) {\n      _this.wallet = result[0];\n    });\n    window.EventBus.$on('management_wallet_changed', function (managementWallet) {\n      _this.wallet = managementWallet;\n    });\n  },\n  methods: {\n    depositEth: function depositEth() {\n      var _this2 = this;\n\n      this.$refs.formData.validate(function (valid) {\n        if (valid) {\n          window.eth.sendTransaction({\n            from: _this2.wallet,\n            to: _this2.operationalWallet,\n            value: window.Eth.toWei(_this2.formData.amount, 'ether'),\n            gas: '3000000',\n            data: '0x'\n          }).then(\n          /*#__PURE__*/\n          function () {\n            var _ref = _asyncToGenerator(\n            /*#__PURE__*/\n            regeneratorRuntime.mark(function _callee(hash) {\n              return regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      window.EventBus.$emit('loading');\n                      _context.next = 3;\n                      return window.Utilities.getTransactionReceipt(hash);\n\n                    case 3:\n                      window.EventBus.$emit('loading-done');\n\n                    case 4:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee, this);\n            }));\n\n            return function (_x) {\n              return _ref.apply(this, arguments);\n            };\n          }()).catch(function (error) {\n            console.log(error);\n          });\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["DepositEth.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,eAAA;AACA,EAAA,KAAA,EAAA,CAAA,mBAAA,CADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,QAAA,EAAA;AACA,QAAA,MAAA,EAAA;AADA,OADA;AAIA,MAAA,MAAA,EAAA,EAJA;AAKA,MAAA,KAAA,EAAA;AACA,QAAA,MAAA,EAAA,CACA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,qBAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SADA,EAEA;AAAA,UAAA,GAAA,EAAA,KAAA;AAAA,UAAA,OAAA,EAAA,kCAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAFA;AADA;AALA,KAAA;AAYA,GAfA;AAgBA,EAAA,OAhBA,qBAgBA;AAAA;;AACA,IAAA,MAAA,CAAA,GAAA,CAAA,QAAA,GAAA,IAAA,CAAA,UAAA,MAAA,EAAA;AACA,MAAA,KAAA,CAAA,MAAA,GAAA,MAAA,CAAA,CAAA,CAAA;AACA,KAFA;AAIA,IAAA,MAAA,CAAA,QAAA,CAAA,GAAA,CAAA,2BAAA,EAAA,UAAA,gBAAA,EAAA;AACA,MAAA,KAAA,CAAA,MAAA,GAAA,gBAAA;AACA,KAFA;AAGA,GAxBA;AAyBA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,wBACA;AAAA;;AACA,WAAA,KAAA,CAAA,QAAA,CAAA,QAAA,CAAA,UAAA,KAAA,EAAA;AACA,YAAA,KAAA,EAAA;AACA,UAAA,MAAA,CAAA,GAAA,CAAA,eAAA,CAAA;AACA,YAAA,IAAA,EAAA,MAAA,CAAA,MADA;AAEA,YAAA,EAAA,EAAA,MAAA,CAAA,iBAFA;AAGA,YAAA,KAAA,EAAA,MAAA,CAAA,GAAA,CAAA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,MAAA,EAAA,OAAA,CAHA;AAIA,YAAA,GAAA,EAAA,SAJA;AAKA,YAAA,IAAA,EAAA;AALA,WAAA,EAMA,IANA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAMA,iBAAA,IAAA;AAAA;AAAA;AAAA;AAAA;AACA,sBAAA,MAAA,CAAA,QAAA,CAAA,KAAA,CAAA,SAAA;AADA;AAAA,6BAEA,MAAA,CAAA,SAAA,CAAA,qBAAA,CAAA,IAAA,CAFA;;AAAA;AAGA,sBAAA,MAAA,CAAA,QAAA,CAAA,KAAA,CAAA,cAAA;;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANA;;AAAA;AAAA;AAAA;AAAA,eAUA,KAVA,CAUA,UAAA,KAAA,EAAA;AACA,YAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,WAZA;AAaA,SAdA,MAcA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,gBAAA;AACA,iBAAA,KAAA;AACA;AACA,OAnBA;AAoBA;AAtBA;AAzBA,CAAA","sourcesContent":["<template>\n  <div class=\"panel\">\n    <h1>Deposit ETH <el-popover\n      placement=\"top-start\"\n      title=\"Deposit ETH\"\n      width=\"300\"\n      trigger=\"hover\"\n      content=\"ETH is required for your node to be able to publish transactions to the blockchain, which is handled by your node's operational wallet. This is mostly needed if you want to publish data sets on the network (as a DC node), but sometimes also required as a DH node. It is recommended to always have around 0.1 ETH on the node operational wallet.\">\n      <i class=\"el-icon-info\" slot=\"reference\"></i>\n    </el-popover></h1>\n    <span>Deposit ETH to your Operational Wallet</span>\n    <el-form :rules=\"rules\" ref=\"formData\" :model=\"formData\">\n      <el-form-item label=\"Wallet to deposit from (i.e. Management wallet)\">\n        <el-input v-model=\"wallet\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"Please enter amount to deposit\">\n        <el-input-number v-model=\"formData.amount\"\n                         :precision=\"3\" :step=\"0.01\" :min=\"0\"></el-input-number>\n      </el-form-item>\n      <el-button @click=\"depositEth\">Deposit ETH</el-button>\n    </el-form>\n  </div>\n</template>\n<script>\nexport default {\n  props: ['operationalWallet'],\n  data() {\n    return {\n      formData: {\n        amount: 0,\n      },\n      wallet: '',\n      rules: {\n        amount: [\n          { required: true, message: 'Please enter amount', trigger: 'blur' },\n          { min: 0.001, message: 'Amount cannot be less than 0.001', trigger: 'blur' },\n        ],\n      },\n    };\n  },\n  mounted() {\n    window.eth.accounts().then((result) => {\n      this.wallet = result[0];\n    });\n\n    window.EventBus.$on('management_wallet_changed', (managementWallet) => {\n      this.wallet = managementWallet;\n    });\n  },\n  methods: {\n    depositEth() {\n      this.$refs.formData.validate((valid) => {\n        if (valid) {\n          window.eth.sendTransaction({\n            from: this.wallet,\n            to: this.operationalWallet,\n            value: window.Eth.toWei(this.formData.amount, 'ether'),\n            gas: '3000000',\n            data: '0x',\n          }).then(async (hash) => {\n            window.EventBus.$emit('loading');\n            await window.Utilities.getTransactionReceipt(hash);\n            window.EventBus.$emit('loading-done');\n          }).catch((error) => {\n            console.log(error);\n          });\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n  },\n};\n</script>\n<style>\n\n</style>\n"],"sourceRoot":"src/components"}]}