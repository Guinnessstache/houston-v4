{"remainingRequest":"/Users/stevannesovic/Sites/node-interface/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/stevannesovic/Sites/node-interface/src/components/Balances.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/stevannesovic/Sites/node-interface/src/components/Balances.vue","mtime":1576229189651},{"path":"/Users/stevannesovic/Sites/node-interface/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/stevannesovic/Sites/node-interface/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/stevannesovic/Sites/node-interface/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/stevannesovic/Sites/node-interface/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  props: ['profileStorageAddress', 'erc725', 'profileAddress', 'operationalWallet', 'tokenAddress', 'management_wallet_input', 'submitted'],\n  name: 'Balances',\n  data() {\n    return {\n      ow_eth_balance: 0,\n      mw_eth_balance: 0,\n      mw_trac_balance: 0,\n      total_trac: 0,\n      locked_trac: 0,\n      minimum_stake: 0,\n      management_wallet: '',\n      total_trac_changed: false,\n      locked_trac_changed: false,\n      total_trac_increased: false,\n      total_trac_decreased: false,\n      mw_trac_balance_increased: false,\n      mw_trac_balance_decreased: false,\n      mw_eth_balance_increased: false,\n      mw_eth_balance_decreased: false,\n      ow_eth_balance_increased: false,\n      ow_eth_balance_decreased: false,\n    };\n  },\n  watch: {\n    locked_trac(newVal, oldVal) {\n      if (newVal.toString() !== oldVal.toString() && oldVal !== 0) {\n        this.locked_trac_changed = true;\n        setTimeout(() => {\n          this.locked_trac_changed = false;\n        }, 3000);\n      } else {\n        this.locked_trac_changed = false;\n      }\n    },\n    total_trac(newVal, oldVal) {\n      if (newVal.toString() !== oldVal.toString() && oldVal !== 0) {\n        if (newVal.toString() > oldVal.toString()) {\n          this.total_trac_increased = true;\n          setTimeout(() => {\n            this.total_trac_increased = false;\n          }, 3000);\n        } else {\n          this.total_trac_decreased = true;\n          setTimeout(() => {\n            this.total_trac_decreased = false;\n          }, 3000);\n        }\n        // this.total_trac_changed = true;\n      } else {\n        this.total_trac_increased = false;\n        this.total_trac_decreased = false;\n      }\n    },\n    mw_trac_balance(newVal, oldVal) {\n      if (newVal.toString() !== oldVal.toString() && oldVal !== 0) {\n        if (newVal.toString() > oldVal.toString()) {\n          this.mw_trac_balance_increased = true;\n          setTimeout(() => {\n            this.mw_trac_balance_increased = false;\n          }, 3000);\n        } else {\n          this.mw_trac_balance_decreased = true;\n          setTimeout(() => {\n            this.mw_trac_balance_decreased = false;\n          }, 3000);\n        }\n      } else {\n        this.mw_trac_balance_increased = false;\n        this.mw_trac_balance_decreased = false;\n      }\n    },\n    mw_eth_balance(newVal, oldVal) {\n      if (newVal.toString() !== oldVal.toString() && oldVal !== 0) {\n        if (newVal.toString() > oldVal.toString()) {\n          this.mw_eth_balance_increased = true;\n          setTimeout(() => {\n            this.mw_eth_balance_increased = false;\n          }, 3000);\n        } else {\n          this.mw_eth_balance_decreased = true;\n          setTimeout(() => {\n            this.mw_eth_balance_decreased = false;\n          }, 3000);\n        }\n      } else {\n        this.mw_eth_balance_increased = false;\n        this.mw_eth_balance_decreased = false;\n      }\n    },\n    ow_eth_balance(newVal, oldVal) {\n      if (newVal.toString() !== oldVal.toString() && oldVal !== 0) {\n        if (newVal.toString() > oldVal.toString()) {\n          this.ow_eth_balance_increased = true;\n          setTimeout(() => {\n            this.ow_eth_balance_increased = false;\n          }, 3000);\n        } else {\n          this.ow_eth_balance_decreased = true;\n          setTimeout(() => {\n            this.ow_eth_balance_decreased = false;\n          }, 3000);\n        }\n      } else {\n        this.ow_eth_balance_increased = false;\n        this.ow_eth_balance_decreased = false;\n      }\n    },\n    management_wallet(newVal, oldVal) {\n      const erc = window.eth.contract(window.erc725Abi).at(this.erc725);\n\n      const keccakContract = window.eth.contract(window.keccakAbi).at(window.keccakAddress);\n      keccakContract.keccakAddress(newVal).then((response) => {\n        const responseArray = Object.values(response);\n        const wallet = responseArray[0];\n\n        erc.getKeysByPurpose(1).then((result) => {\n          const keys = result.keys;\n          const isValid = keys.includes(wallet);\n\n          if (!isValid) {\n            this.$message.error({\n              message: 'This wallet is not registered as a management wallet, please change it in MetaMask!',\n              duration: 7000,\n            });\n          }\n        });\n      });\n    },\n  },\n  computed: {\n    safe_to_withdraw() {\n      try {\n        return this.total_trac.sub(this.locked_trac).sub(this.minimum_stake);\n      } catch (e) {\n        // console.log(e)\n        return '';\n      }\n    },\n  },\n  filters: {\n    toTrac(val) {\n      const am = new window.Eth.BN(val);\n      const base = new window.Eth.BN(10);\n      const exponent = new window.Eth.BN(15);\n      const multiply = base.pow(exponent);\n      return (am.div(multiply).toNumber() < 0) ? 0 : am.div(multiply).toNumber() / 1000;\n    },\n  },\n  mounted() {\n    console.log('pozvana u balances');\n    this.getAllBalances();\n    window.EventBus.$on('loading-done', () => {\n      this.getAllBalances();\n    }, 5000);\n    setInterval(() => {\n      this.getAllBalances();\n    }, 10000);\n    if (screen.width <= 770 && this.management_wallet_input !== '') {\n      this.management_wallet = this.management_wallet_input;\n    }\n  },\n  methods: {\n    getAllBalances() {\n      console.log('pozvana get balances');\n\n      console.log(this.operationalWallet, 'operational wallet');\n\n      window.eth.getBalance(this.operationalWallet)\n        .then((result) => {\n          this.ow_eth_balance = Math.round(window.Eth.fromWei(result, 'ether') * 1000) / 1000;\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n      window.eth.accounts().then((result) => {\n        if (this.management_wallet_input !== '') {\n          this.management_wallet = this.management_wallet_input;\n          window.EventBus.$emit('management_wallet_changed', this.management_wallet);\n        } else {\n          this.management_wallet = result[0];\n          window.EventBus.$emit('management_wallet_changed', this.management_wallet);\n        }\n        window.eth.getBalance(this.management_wallet)\n          .then((result) => {\n            this.mw_eth_balance = Math.round(window.Eth.fromWei(result, 'ether') * 1000) / 1000;\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n        const tokenContract = window.eth.contract(window.tokenAbi).at(this.tokenAddress);\n        tokenContract.balanceOf(this.management_wallet)\n          .then((balance) => {\n            this.mw_trac_balance = this.$options.filters.toTrac(balance[0].toString());\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      });\n\n      const profileStorageContract = window.eth.contract(window.profileStorageAbi)\n        .at(this.profileStorageAddress);\n\n      const profileContract = window.eth.contract(window.profileAbi)\n        .at(this.profileAddress);\n\n      profileStorageContract.getStake(this.erc725).then((result) => {\n        this.total_trac = new window.Eth.BN(result[0]);\n      });\n\n      profileStorageContract.getStakeReserved(this.erc725).then((result) => {\n        this.locked_trac = new window.Eth.BN(result[0]);\n      });\n\n      profileContract.minimalStake().then((result) => {\n        this.minimum_stake = new window.Eth.BN(result[0]);\n      });\n    },\n  },\n};\n",{"version":3,"sources":["Balances.vue"],"names":[],"mappingsfile":"Balances.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <h2>Node profile</h2>\n    <el-row v-bind:class=\"[\n    total_trac_increased ? 'increased' : '',\n    total_trac_decreased ? 'decreased' : '',\n    'balance-row'\n    ]\">\n      <el-col :span=\"12\" class=\"align-left\">TOTAL</el-col>\n      <el-col :span=\"12\">{{total_trac | toTrac}} TRAC</el-col>\n    </el-row>\n\n    <el-row class=\"balance-row\"\n            v-bind:class=\"[locked_trac_changed ? 'changed' : '', 'balance-row']\">\n      <el-col :span=\"12\" class=\"align-left\">LOCKED</el-col>\n      <el-col :span=\"12\">{{locked_trac | toTrac}} TRAC</el-col>\n    </el-row>\n\n    <el-row class=\"balance-row\">\n      <el-col :span=\"12\" class=\"align-left\">MIN. STAKE</el-col>\n      <el-col :span=\"12\">{{minimum_stake | toTrac}} TRAC</el-col>\n    </el-row>\n\n    <el-row class=\"balance-row\">\n      <el-col :span=\"12\" class=\"align-left\">SAFE TO WITHDRAW</el-col>\n      <el-col :span=\"12\">{{safe_to_withdraw | toTrac}} TRAC</el-col>\n    </el-row>\n\n    <h2>Balances</h2>\n    <h1>Operational wallet</h1>\n    <h6>{{operationalWallet}}</h6>\n    <el-row class=\"balance-row\" v-bind:class=\"[\n    ow_eth_balance_increased ? 'increased' : '',\n    ow_eth_balance_decreased ? 'decreased' : '',\n    'balance-row'\n    ]\">\n      <el-col :span=\"12\" class=\"align-left\">ETH</el-col>\n      <el-col :span=\"12\">{{ow_eth_balance}}</el-col>\n    </el-row>\n\n    <h1>Management wallet</h1>\n    <h6>{{management_wallet}}</h6>\n    <el-row class=\"balance-row\" v-bind:class=\"[\n    mw_eth_balance_increased ? 'increased' : '',\n    mw_eth_balance_decreased ? 'decreased' : '',\n    'balance-row'\n    ]\">\n      <el-col :span=\"12\" class=\"align-left\">ETH</el-col>\n      <el-col :span=\"12\">{{mw_eth_balance}}</el-col>\n    </el-row>\n\n    <el-row class=\"balance-row\" v-bind:class=\"[\n    mw_trac_balance_increased ? 'increased' : '',\n    mw_trac_balance_decreased ? 'decreased' : '',\n    'balance-row'\n    ]\">\n      <el-col :span=\"12\" class=\"align-left\">TRAC</el-col>\n      <el-col :span=\"12\">{{mw_trac_balance}}</el-col>\n    </el-row>\n  </div>\n</template>\n<script>\nexport default {\n  props: ['profileStorageAddress', 'erc725', 'profileAddress', 'operationalWallet', 'tokenAddress', 'management_wallet_input', 'submitted'],\n  name: 'Balances',\n  data() {\n    return {\n      ow_eth_balance: 0,\n      mw_eth_balance: 0,\n      mw_trac_balance: 0,\n      total_trac: 0,\n      locked_trac: 0,\n      minimum_stake: 0,\n      management_wallet: '',\n      total_trac_changed: false,\n      locked_trac_changed: false,\n      total_trac_increased: false,\n      total_trac_decreased: false,\n      mw_trac_balance_increased: false,\n      mw_trac_balance_decreased: false,\n      mw_eth_balance_increased: false,\n      mw_eth_balance_decreased: false,\n      ow_eth_balance_increased: false,\n      ow_eth_balance_decreased: false,\n    };\n  },\n  watch: {\n    locked_trac(newVal, oldVal) {\n      if (newVal.toString() !== oldVal.toString() && oldVal !== 0) {\n        this.locked_trac_changed = true;\n        setTimeout(() => {\n          this.locked_trac_changed = false;\n        }, 3000);\n      } else {\n        this.locked_trac_changed = false;\n      }\n    },\n    total_trac(newVal, oldVal) {\n      if (newVal.toString() !== oldVal.toString() && oldVal !== 0) {\n        if (newVal.toString() > oldVal.toString()) {\n          this.total_trac_increased = true;\n          setTimeout(() => {\n            this.total_trac_increased = false;\n          }, 3000);\n        } else {\n          this.total_trac_decreased = true;\n          setTimeout(() => {\n            this.total_trac_decreased = false;\n          }, 3000);\n        }\n        // this.total_trac_changed = true;\n      } else {\n        this.total_trac_increased = false;\n        this.total_trac_decreased = false;\n      }\n    },\n    mw_trac_balance(newVal, oldVal) {\n      if (newVal.toString() !== oldVal.toString() && oldVal !== 0) {\n        if (newVal.toString() > oldVal.toString()) {\n          this.mw_trac_balance_increased = true;\n          setTimeout(() => {\n            this.mw_trac_balance_increased = false;\n          }, 3000);\n        } else {\n          this.mw_trac_balance_decreased = true;\n          setTimeout(() => {\n            this.mw_trac_balance_decreased = false;\n          }, 3000);\n        }\n      } else {\n        this.mw_trac_balance_increased = false;\n        this.mw_trac_balance_decreased = false;\n      }\n    },\n    mw_eth_balance(newVal, oldVal) {\n      if (newVal.toString() !== oldVal.toString() && oldVal !== 0) {\n        if (newVal.toString() > oldVal.toString()) {\n          this.mw_eth_balance_increased = true;\n          setTimeout(() => {\n            this.mw_eth_balance_increased = false;\n          }, 3000);\n        } else {\n          this.mw_eth_balance_decreased = true;\n          setTimeout(() => {\n            this.mw_eth_balance_decreased = false;\n          }, 3000);\n        }\n      } else {\n        this.mw_eth_balance_increased = false;\n        this.mw_eth_balance_decreased = false;\n      }\n    },\n    ow_eth_balance(newVal, oldVal) {\n      if (newVal.toString() !== oldVal.toString() && oldVal !== 0) {\n        if (newVal.toString() > oldVal.toString()) {\n          this.ow_eth_balance_increased = true;\n          setTimeout(() => {\n            this.ow_eth_balance_increased = false;\n          }, 3000);\n        } else {\n          this.ow_eth_balance_decreased = true;\n          setTimeout(() => {\n            this.ow_eth_balance_decreased = false;\n          }, 3000);\n        }\n      } else {\n        this.ow_eth_balance_increased = false;\n        this.ow_eth_balance_decreased = false;\n      }\n    },\n    management_wallet(newVal, oldVal) {\n      const erc = window.eth.contract(window.erc725Abi).at(this.erc725);\n\n      const keccakContract = window.eth.contract(window.keccakAbi).at(window.keccakAddress);\n      keccakContract.keccakAddress(newVal).then((response) => {\n        const responseArray = Object.values(response);\n        const wallet = responseArray[0];\n\n        erc.getKeysByPurpose(1).then((result) => {\n          const keys = result.keys;\n          const isValid = keys.includes(wallet);\n\n          if (!isValid) {\n            this.$message.error({\n              message: 'This wallet is not registered as a management wallet, please change it in MetaMask!',\n              duration: 7000,\n            });\n          }\n        });\n      });\n    },\n  },\n  computed: {\n    safe_to_withdraw() {\n      try {\n        return this.total_trac.sub(this.locked_trac).sub(this.minimum_stake);\n      } catch (e) {\n        // console.log(e)\n        return '';\n      }\n    },\n  },\n  filters: {\n    toTrac(val) {\n      const am = new window.Eth.BN(val);\n      const base = new window.Eth.BN(10);\n      const exponent = new window.Eth.BN(15);\n      const multiply = base.pow(exponent);\n      return (am.div(multiply).toNumber() < 0) ? 0 : am.div(multiply).toNumber() / 1000;\n    },\n  },\n  mounted() {\n    console.log('pozvana u balances');\n    this.getAllBalances();\n    window.EventBus.$on('loading-done', () => {\n      this.getAllBalances();\n    }, 5000);\n    setInterval(() => {\n      this.getAllBalances();\n    }, 10000);\n    if (screen.width <= 770 && this.management_wallet_input !== '') {\n      this.management_wallet = this.management_wallet_input;\n    }\n  },\n  methods: {\n    getAllBalances() {\n      console.log('pozvana get balances');\n\n      console.log(this.operationalWallet, 'operational wallet');\n\n      window.eth.getBalance(this.operationalWallet)\n        .then((result) => {\n          this.ow_eth_balance = Math.round(window.Eth.fromWei(result, 'ether') * 1000) / 1000;\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n      window.eth.accounts().then((result) => {\n        if (this.management_wallet_input !== '') {\n          this.management_wallet = this.management_wallet_input;\n          window.EventBus.$emit('management_wallet_changed', this.management_wallet);\n        } else {\n          this.management_wallet = result[0];\n          window.EventBus.$emit('management_wallet_changed', this.management_wallet);\n        }\n        window.eth.getBalance(this.management_wallet)\n          .then((result) => {\n            this.mw_eth_balance = Math.round(window.Eth.fromWei(result, 'ether') * 1000) / 1000;\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n        const tokenContract = window.eth.contract(window.tokenAbi).at(this.tokenAddress);\n        tokenContract.balanceOf(this.management_wallet)\n          .then((balance) => {\n            this.mw_trac_balance = this.$options.filters.toTrac(balance[0].toString());\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n      });\n\n      const profileStorageContract = window.eth.contract(window.profileStorageAbi)\n        .at(this.profileStorageAddress);\n\n      const profileContract = window.eth.contract(window.profileAbi)\n        .at(this.profileAddress);\n\n      profileStorageContract.getStake(this.erc725).then((result) => {\n        this.total_trac = new window.Eth.BN(result[0]);\n      });\n\n      profileStorageContract.getStakeReserved(this.erc725).then((result) => {\n        this.locked_trac = new window.Eth.BN(result[0]);\n      });\n\n      profileContract.minimalStake().then((result) => {\n        this.minimum_stake = new window.Eth.BN(result[0]);\n      });\n    },\n  },\n};\n</script>\n<style>\n  .align-left {\n    text-align: left;\n  }\n\n  .balance-row {\n    padding: 5px;\n    margin: 5px 0;\n    transition: 1s all;\n  }\n\n  .balance-row:nth-of-type(odd) {\n    background-color: #220F50;\n    color: white;\n  }\n\n  .balance-row div:nth-child(2) {\n    transition: 1s color;\n  }\n\n  .changed div:nth-child(2) {\n    color: red;\n    transition: 1s color;\n  }\n\n  .increased div:nth-child(2) {\n    color: #14da9e;\n    transition: 1s color;\n  }\n\n  .decreased div:nth-child(2) {\n    color: red;\n    transition: 1s color;\n  }\n\n</style>\n"]}]}