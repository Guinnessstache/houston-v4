{"remainingRequest":"/Users/stevannesovic/Sites/houston-v4/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/stevannesovic/Sites/houston-v4/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/stevannesovic/Sites/houston-v4/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/stevannesovic/Sites/houston-v4/src/components/ManageWallets.vue?vue&type=template&id=741b2660&","dependencies":[{"path":"/Users/stevannesovic/Sites/houston-v4/src/components/ManageWallets.vue","mtime":1570622245422},{"path":"/Users/stevannesovic/Sites/houston-v4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/stevannesovic/Sites/houston-v4/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/stevannesovic/Sites/houston-v4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/stevannesovic/Sites/houston-v4/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"panel\"},[_c('h1',[_vm._v(\"Manage wallets \"),_c('el-popover',{attrs:{\"placement\":\"top-start\",\"title\":\"Manage wallets\",\"width\":\"500\",\"trigger\":\"hover\",\"content\":\"The OriginTrail node identity is compatible with the ERC725 standard and utilizes it for key management.\\n\\nIt distinguishes two different types of keys in the identity contract:\\n- The operational wallet, whose private key is stored on the node itself and is used to perform a multitude of operations in the ODN (signing, execution, etc). It requires a small balance of ETH in order to be able to publish transactions to the blockchain, and it can be filled periodically. No TRAC tokens are required for this wallet\\n- The management wallet, whose private key is NOT stored on the node and is used to deal with the funds (TRAC rewards) and to manage the keys associated with the ERC725 identity. The management wallet can be any ERC20 supporting wallet (Trezor, Ledger, Metamask etc).\\nThis approach is taken as a convenience measure to provide for flexibility with key management and to minimize the risk of loosing funds in case of the operational key stored on the node somehow gets compromised.\\nYou can use this interface to manage your wallets (add/remove both). IMPORTANT NOTE: Only use this interface if you know what you are doing! With improper use, your node can stop operating and you can loose your rewards!\"}},[_c('i',{staticClass:\"el-icon-info\",attrs:{\"slot\":\"reference\"},slot:\"reference\"})])],1),_c('span',[_vm._v(\"Add/Remove wallets (Management & Operational)\")]),_c('el-form',[_c('el-form-item',{attrs:{\"label\":\"Please enter wallet\"}},[_c('el-input',{model:{value:(_vm.walletToAdd),callback:function ($$v) {_vm.walletToAdd=$$v},expression:\"walletToAdd\"}})],1),_c('el-form-item',{attrs:{\"label\":\"Wallet type to manage\"}},[_c('el-select',{attrs:{\"placeholder\":\"Select\",\"clearable\":\"\"},model:{value:(_vm.selected_wallet_type),callback:function ($$v) {_vm.selected_wallet_type=$$v},expression:\"selected_wallet_type\"}},_vm._l((_vm.options),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1),_c('el-button',{on:{\"click\":_vm.add}},[_vm._v(\"Add Wallet\")]),_c('el-button',{on:{\"click\":_vm.remove}},[_vm._v(\"Remove Wallet\")])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}