{"remainingRequest":"/Users/nikitaabrashkin/Sites/houston-v4/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nikitaabrashkin/Sites/houston-v4/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/nikitaabrashkin/Sites/houston-v4/src/App.vue","mtime":1577120527116},{"path":"/Users/nikitaabrashkin/Sites/houston-v4/node_modules/cache-loader/dist/cjs.js","mtime":1576674621227},{"path":"/Users/nikitaabrashkin/Sites/houston-v4/node_modules/babel-loader/lib/index.js","mtime":1576674620772},{"path":"/Users/nikitaabrashkin/Sites/houston-v4/node_modules/cache-loader/dist/cjs.js","mtime":1576674621227},{"path":"/Users/nikitaabrashkin/Sites/houston-v4/node_modules/vue-loader/lib/index.js","mtime":1576674627565}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Balances from './components/Balances.vue';\nimport DepositEth from './components/DepositEth.vue';\nimport DepositTokens from './components/DepositTokens.vue';\nimport Withdraw from './components/Withdraw.vue';\nimport ManageWallets from './components/ManageWallets.vue';\nimport MyAccount from './components/MyAccount.vue';\nimport NodePricing from './components/NodePricing.vue';\nimport Jobs from './components/Jobs.vue';\nimport NodeConfig from './components/NodeConfig.vue';\nimport ManagementHeader from './components/TokenManagementHeader.vue';\nimport Utilities from './Utilities';\n\nexport default {\n  name: 'app',\n  data() {\n    return {\n      node_address: '',\n      activeIndex2: '/',\n      token_contract: '',\n      profile_address: '',\n      profile_storage_address: '',\n      submitted: 0,\n      loading_text: 'Transaction in progress. Please wait for transaction to finish.',\n      loading: false,\n      mobileTrue: false,\n      management_wallet_input: '',\n      erc_identity: '',\n      operational_wallet: '',\n      houston_pass: '',\n      rules: {\n        operational_wallet: [\n          {\n            required: true,\n            message: 'Please input your operational wallet',\n            trigger: 'blur',\n          },\n          {\n            max: 42,\n            message: 'Your wallet should not be more than 42 characters',\n          },\n          {\n            min: 42,\n            message: 'Your wallet should be at least 42 characters long',\n          },\n        ],\n        erc_identity: [\n          {\n            required: true,\n            message: 'Please input your ERC-Identity',\n            trigger: 'blur',\n          },\n          {\n            max: 42,\n            message: 'Your ERC-Identity should not be more than 42 characters',\n          },\n          {\n            min: 42,\n            message: 'Your ERC-Identity should be at least 42 characters long',\n          },\n        ],\n      },\n      showNodeProfile: false,\n      showMyAccount: false,\n      showNodeConfig: false,\n      showNodePricing: false,\n      showJobs: false,\n      configData: {},\n      systemData: {},\n      showConfig: false,\n      node_id: '',\n      network_options: [{\n        value: 'mainnet',\n        label: 'Mainnet',\n      }, {\n        value: 'testnet',\n        label: 'Testnet',\n      }],\n      selected_network: 'testnet',\n    };\n  },\n  mounted() {\n    if (localStorage.getItem('node_address') !== null) {\n      this.node_address = localStorage.getItem('node_address');\n    }\n\n    if (localStorage.getItem('erc_identity') !== null) {\n      this.erc_identity = localStorage.getItem('erc_identity');\n    }\n\n    if (localStorage.getItem('houston_pass') !== null) {\n      this.houston_pass = localStorage.getItem('houston_pass');\n    }\n\n    if (localStorage.getItem('operational_wallet') !== null) {\n      this.operational_wallet = localStorage.getItem('operational_wallet');\n    }\n\n    if (localStorage.getItem('selected_network') !== null) {\n      this.selected_network = localStorage.getItem('selected_network');\n    }\n\n    window.EventBus.$on('loading', (msg) => {\n      this.loading = true;\n      this.loading_text = msg || 'Transaction in progress. Please wait for transaction to finish.';\n    });\n\n    window.EventBus.$on('loading-done', () => {\n      this.loading = false;\n    });\n    if (window.screen.width <= 770) {\n      this.mobileTrue = true;\n    }\n  },\n  methods: {\n    submitIdentity() {\n      localStorage.setItem('erc_identity', this.erc_identity);\n      localStorage.setItem('operational_wallet', this.operational_wallet);\n      localStorage.setItem('houston_pass', this.houston_pass);\n      localStorage.setItem('node_address', this.node_address);\n      localStorage.setItem('selected_network', this.selected_network);\n\n      if (this.selected_network === 'mainnet') {\n        Utilities.connectToMainnet();\n\n        window.hub.tokenAddress()\n          .then((result) => {\n            this.token_contract = result[0];\n          });\n\n        window.hub.getContractAddress('Profile')\n          .then((result) => {\n            this.profile_address = result[0];\n          });\n\n        window.hub.getContractAddress('ProfileStorage')\n          .then((result) => {\n            this.profile_storage_address = result[0];\n          });\n      } else {\n        Utilities.connectToTestnet();\n\n        window.hub.tokenAddress()\n          .then((result) => {\n            this.token_contract = result[0];\n          });\n\n        window.hub.getContractAddress('Profile')\n          .then((result) => {\n            this.profile_address = result[0];\n          });\n\n        window.hub.getContractAddress('ProfileStorage')\n          .then((result) => {\n            this.profile_storage_address = result[0];\n          });\n      }\n\n      this.submitted = 1;\n      this.activeIndex2 = '1';\n\n      this.$socket.io.uri = `https://${this.node_address}:3000/?password=${this.houston_pass}`;\n      this.$socket.open();\n\n      window.EventBus.$emit('get-balances-event');\n    },\n    handleSelect(key, keyPath) {\n\n      /* eslint-disable */\n        this.activeIndex2 = key;\n        if (key == 1) {\n          this.showMyAccount = true;\n        } else if (key == 2) {\n          this.showNodeProfile = true;\n        } else if (key == 3) {\n          this.showNodeConfig = true;\n        } else if (key == 4) {\n          this.showNodePricing = true;\n        } else if (key == 5) {\n          this.showJobs = true;\n        }\n      },\n\n    },\n    sockets: {\n      connect() {\n        console.log('Socket connected. Checking for version!');\n        this.$socket.emit('get-balance');\n        this.$socket.emit('get-balance');\n        this.$socket.emit('get-node-info');\n      },\n      config(val) {\n        console.log(val, 'config');\n        this.node_id = val.identity;\n        this.configData = val;\n        this.showConfig = true;\n        window.EventBus.$emit('config',val);\n        window.EventBus.$emit('node_id', this.node_id);\n\n      },\n      system(val) {\n        this.systemData = val;\n        window.network_type_constant = val.info.environment;\n        window.EventBus.$emit('system-data', val);\n\n        console.log(val, 'system');\n      },\n      balance(val) {\n        console.log(val, 'balance');\n      },\n      nodeInfo(val) {\n        console.log(val, 'node info');\n      },\n\n  },\n  components: {\n    Jobs,\n    NodePricing,\n    NodeConfig,\n    Balances,\n    DepositEth,\n    DepositTokens,\n    Withdraw,\n    ManageWallets,\n    MyAccount,\n    ManagementHeader,\n  },\n};\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n    <div id=\"app\">\n        <el-menu :default-active=\"activeIndex2\" class=\"el-menu-demo\" mode=\"horizontal\" @select=\"handleSelect\">\n            <el-menu-item index=\"0\">\n                <img alt=\"OriginTrail\" src=\"./assets/ot-dark_purple.svg\" class=\"logo\">  Houston v4\n            </el-menu-item>\n            <el-menu-item index=\"1\" :disabled=\"!submitted\">My Account</el-menu-item>\n            <el-menu-item index=\"2\" :disabled=\"!submitted\">Node Profile</el-menu-item>\n            <el-menu-item index=\"3\" :disabled=\"!submitted && !showConfig\">Node Configuration</el-menu-item>\n            <el-menu-item index=\"4\" :disabled=\"!submitted\">Pricing Configuration</el-menu-item>\n            <el-menu-item index=\"5\" :disabled=\"!submitted\">Jobs/Offers</el-menu-item>\n        </el-menu>\n        <el-container>\n            <el-container v-if=\"submitted && activeIndex2 === '1'\">\n                <my-account :profile-storage-address=\"profile_storage_address\"\n                            :profile-address=\"profile_address\"\n                            :erc725=\"erc_identity\"\n                            :submitted=\"submitted\"\n                            :operational-wallet=\"operational_wallet\"\n                            :token-address=\"token_contract\"\n                            :node-id=\"node_id\"\n                            :configData=\"configData\"\n                            :systemData=\"systemData\"\n                            :management_wallet_input=\"management_wallet_input\"></my-account>\n            </el-container>\n\n            <div v-else-if=\"submitted && activeIndex2 === '2'\" class=\"token-management-wrapper\">\n                <el-row >\n                    <ManagementHeader></ManagementHeader>\n                </el-row>\n                <el-container>\n                    <el-aside width=\"30%\">\n                        <balances\n                                :profile-storage-address=\"profile_storage_address\"\n                                :profile-address=\"profile_address\"\n                                :erc725=\"erc_identity\"\n                                :operational-wallet=\"operational_wallet\"\n                                :token-address=\"token_contract\"\n                                :management_wallet_input=\"management_wallet_input\"\n                        ></balances>\n                    </el-aside>\n                    <el-main v-loading=\"loading\"\n                             :element-loading-text=\"loading_text\">\n                        <el-row>\n                            <el-col :span=\"12\">\n                                <deposit-eth :operational-wallet=\"operational_wallet\"></deposit-eth>\n                            </el-col>\n                            <el-col :span=\"12\">\n                                <deposit-tokens\n                                        :profile-address=\"profile_address\"\n                                        :token-address=\"token_contract\"\n                                        :erc725=\"erc_identity\">\n                                </deposit-tokens>\n                            </el-col>\n                        </el-row>\n                        <el-row>\n                            <el-col :span=\"12\">\n                                <withdraw\n                                        :erc725=\"erc_identity\"\n                                        :profile-address=\"profile_address\"\n                                ></withdraw>\n                            </el-col>\n                            <el-col :span=\"12\">\n                                <manage-wallets\n                                        :erc725=\"erc_identity\"></manage-wallets>\n                            </el-col>\n                        </el-row>\n                    </el-main>\n                </el-container>\n            </div>\n\n            <el-container v-else-if=\"submitted && activeIndex2 === '3'\">\n                <node-config :node-config=\"configData\" :system=\"systemData\" :node-id=\"node_id\"\n                             v-if=\"showConfig\"></node-config>\n            </el-container>\n            <el-container v-else-if=\"submitted && activeIndex2 === '4'\">\n                <node-pricing :node-config=\"configData\" :system=\"systemData\" :node-id=\"node_id\"\n                              v-if=\"showConfig\"></node-pricing>\n            </el-container>\n            <el-container v-else-if=\"submitted && activeIndex2 === '5'\">\n                <jobs :submitted=\"submitted\"></jobs>\n            </el-container>\n            <el-container v-else-if=\"submitted && mobileTrue\">\n                <el-main>\n                    <balances\n                            v-if=\"showNodeProfile\"\n                            :profile-storage-address=\"profile_storage_address\"\n                            :profile-address=\"profile_address\"\n                            :erc725=\"erc_identity\"\n                            :operational-wallet=\"operational_wallet\"\n                            :token-address=\"token_contract\"\n                            :management_wallet_input=\"management_wallet_input\"\n                    ></balances>\n                </el-main>\n            </el-container>\n            <el-container v-else>\n                <el-main>\n                    <div class=\"landing-page-form-wrapper\">\n                        <h1>Houston App</h1>\n                        <div class=\"landing-page-inner-wrapper\">\n                            <el-form>\n                                <div class=\"network-wrapper\">\n                                    <el-select v-model=\"selected_network\" placeholder=\"Please select the network\">\n                                        <el-option\n                                                v-for=\"item in network_options\"\n                                                :key=\"item.value\"\n                                                :label=\"item.label\"\n                                                :value=\"item.value\">\n                                        </el-option>\n                                    </el-select>\n                                </div>\n\n\n                                <el-form-item label=\"Please enter your Node address\"\n                                >\n                                    <el-input\n                                            :disabled=\"selected_network === ''\"\n                                            type=\"textarea\"\n                                            :autosize=\"{ minRows: 1, maxRows: 2}\"\n                                            resize=\"none\"\n                                            v-model=\"node_address\"></el-input>\n                                </el-form-item>\n                                <el-form-item label=\"Please enter your Houston password\"\n                                >\n                                    <el-input\n                                            :disabled=\"selected_network === ''\"\n                                            type=\"textarea\"\n                                            :autosize=\"{ minRows: 1, maxRows: 2}\"\n                                            resize=\"none\"\n                                            v-model=\"houston_pass\"></el-input>\n                                </el-form-item>\n                                <el-form-item label=\"Please enter your ERC725 identity\"\n                                >\n                                    <el-input\n                                            :disabled=\"selected_network === ''\"\n                                            type=\"textarea\"\n                                            :autosize=\"{ minRows: 1, maxRows: 2}\"\n                                            resize=\"none\"\n                                            v-model=\"erc_identity\"></el-input>\n                                </el-form-item>\n                                <el-form-item label=\"Please enter your operational wallet address\"\n                                >\n                                    <el-input\n                                            :disabled=\"selected_network === ''\"\n                                            type=\"textarea\"\n                                            :autosize=\"{ minRows: 1, maxRows: 2}\"\n                                            resize=\"none\"\n                                            v-model=\"operational_wallet\"></el-input>\n                                </el-form-item>\n                                <el-form-item\n                                        v-if=\"mobileTrue\"\n                                        label=\"Please enter your management wallet address\"\n\n                                >\n                                    <el-input\n                                            :disabled=\"selected_network === ''\"\n                                            maxlength=\"42\"\n                                            minlength=\"42\"\n                                            type=\"textarea\"\n                                            :autosize=\"{ minRows: 1, maxRows: 2}\"\n                                            resize=\"none\"\n                                            v-model=\"management_wallet_input\"></el-input>\n                                </el-form-item>\n                                <el-button class=\"landing-page-button\" @click=\"submitIdentity\" :disabled=\"selected_network === ''\">Submit</el-button>\n                            </el-form>\n                        </div>\n                    </div>\n                </el-main>\n            </el-container>\n        </el-container>\n    </div>\n</template>\n\n<script>\nimport Balances from './components/Balances.vue';\nimport DepositEth from './components/DepositEth.vue';\nimport DepositTokens from './components/DepositTokens.vue';\nimport Withdraw from './components/Withdraw.vue';\nimport ManageWallets from './components/ManageWallets.vue';\nimport MyAccount from './components/MyAccount.vue';\nimport NodePricing from './components/NodePricing.vue';\nimport Jobs from './components/Jobs.vue';\nimport NodeConfig from './components/NodeConfig.vue';\nimport ManagementHeader from './components/TokenManagementHeader.vue';\nimport Utilities from './Utilities';\n\nexport default {\n  name: 'app',\n  data() {\n    return {\n      node_address: '',\n      activeIndex2: '/',\n      token_contract: '',\n      profile_address: '',\n      profile_storage_address: '',\n      submitted: 0,\n      loading_text: 'Transaction in progress. Please wait for transaction to finish.',\n      loading: false,\n      mobileTrue: false,\n      management_wallet_input: '',\n      erc_identity: '',\n      operational_wallet: '',\n      houston_pass: '',\n      rules: {\n        operational_wallet: [\n          {\n            required: true,\n            message: 'Please input your operational wallet',\n            trigger: 'blur',\n          },\n          {\n            max: 42,\n            message: 'Your wallet should not be more than 42 characters',\n          },\n          {\n            min: 42,\n            message: 'Your wallet should be at least 42 characters long',\n          },\n        ],\n        erc_identity: [\n          {\n            required: true,\n            message: 'Please input your ERC-Identity',\n            trigger: 'blur',\n          },\n          {\n            max: 42,\n            message: 'Your ERC-Identity should not be more than 42 characters',\n          },\n          {\n            min: 42,\n            message: 'Your ERC-Identity should be at least 42 characters long',\n          },\n        ],\n      },\n      showNodeProfile: false,\n      showMyAccount: false,\n      showNodeConfig: false,\n      showNodePricing: false,\n      showJobs: false,\n      configData: {},\n      systemData: {},\n      showConfig: false,\n      node_id: '',\n      network_options: [{\n        value: 'mainnet',\n        label: 'Mainnet',\n      }, {\n        value: 'testnet',\n        label: 'Testnet',\n      }],\n      selected_network: 'testnet',\n    };\n  },\n  mounted() {\n    if (localStorage.getItem('node_address') !== null) {\n      this.node_address = localStorage.getItem('node_address');\n    }\n\n    if (localStorage.getItem('erc_identity') !== null) {\n      this.erc_identity = localStorage.getItem('erc_identity');\n    }\n\n    if (localStorage.getItem('houston_pass') !== null) {\n      this.houston_pass = localStorage.getItem('houston_pass');\n    }\n\n    if (localStorage.getItem('operational_wallet') !== null) {\n      this.operational_wallet = localStorage.getItem('operational_wallet');\n    }\n\n    if (localStorage.getItem('selected_network') !== null) {\n      this.selected_network = localStorage.getItem('selected_network');\n    }\n\n    window.EventBus.$on('loading', (msg) => {\n      this.loading = true;\n      this.loading_text = msg || 'Transaction in progress. Please wait for transaction to finish.';\n    });\n\n    window.EventBus.$on('loading-done', () => {\n      this.loading = false;\n    });\n    if (window.screen.width <= 770) {\n      this.mobileTrue = true;\n    }\n  },\n  methods: {\n    submitIdentity() {\n      localStorage.setItem('erc_identity', this.erc_identity);\n      localStorage.setItem('operational_wallet', this.operational_wallet);\n      localStorage.setItem('houston_pass', this.houston_pass);\n      localStorage.setItem('node_address', this.node_address);\n      localStorage.setItem('selected_network', this.selected_network);\n\n      if (this.selected_network === 'mainnet') {\n        Utilities.connectToMainnet();\n\n        window.hub.tokenAddress()\n          .then((result) => {\n            this.token_contract = result[0];\n          });\n\n        window.hub.getContractAddress('Profile')\n          .then((result) => {\n            this.profile_address = result[0];\n          });\n\n        window.hub.getContractAddress('ProfileStorage')\n          .then((result) => {\n            this.profile_storage_address = result[0];\n          });\n      } else {\n        Utilities.connectToTestnet();\n\n        window.hub.tokenAddress()\n          .then((result) => {\n            this.token_contract = result[0];\n          });\n\n        window.hub.getContractAddress('Profile')\n          .then((result) => {\n            this.profile_address = result[0];\n          });\n\n        window.hub.getContractAddress('ProfileStorage')\n          .then((result) => {\n            this.profile_storage_address = result[0];\n          });\n      }\n\n      this.submitted = 1;\n      this.activeIndex2 = '1';\n\n      this.$socket.io.uri = `https://${this.node_address}:3000/?password=${this.houston_pass}`;\n      this.$socket.open();\n\n      window.EventBus.$emit('get-balances-event');\n    },\n    handleSelect(key, keyPath) {\n\n      /* eslint-disable */\n        this.activeIndex2 = key;\n        if (key == 1) {\n          this.showMyAccount = true;\n        } else if (key == 2) {\n          this.showNodeProfile = true;\n        } else if (key == 3) {\n          this.showNodeConfig = true;\n        } else if (key == 4) {\n          this.showNodePricing = true;\n        } else if (key == 5) {\n          this.showJobs = true;\n        }\n      },\n\n    },\n    sockets: {\n      connect() {\n        console.log('Socket connected. Checking for version!');\n        this.$socket.emit('get-balance');\n        this.$socket.emit('get-balance');\n        this.$socket.emit('get-node-info');\n      },\n      config(val) {\n        console.log(val, 'config');\n        this.node_id = val.identity;\n        this.configData = val;\n        this.showConfig = true;\n        window.EventBus.$emit('config',val);\n        window.EventBus.$emit('node_id', this.node_id);\n\n      },\n      system(val) {\n        this.systemData = val;\n        window.network_type_constant = val.info.environment;\n        window.EventBus.$emit('system-data', val);\n\n        console.log(val, 'system');\n      },\n      balance(val) {\n        console.log(val, 'balance');\n      },\n      nodeInfo(val) {\n        console.log(val, 'node info');\n      },\n\n  },\n  components: {\n    Jobs,\n    NodePricing,\n    NodeConfig,\n    Balances,\n    DepositEth,\n    DepositTokens,\n    Withdraw,\n    ManageWallets,\n    MyAccount,\n    ManagementHeader,\n  },\n};\n</script>\n\n<style lang=\"scss\">\n\n    @import \"./scss/landig-page\";\n    #app {\n        font-family: 'Roboto', Helvetica, Arial, sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        text-align: center;\n        color: #2c3e50;\n    }\n\n    .el-menu--horizontal>.el-menu-item.is-active {\n        border-bottom: 2px solid #1d2667;\n        color: #303133;\n        background-color: #f6f6f6;\n    }\n\n    .el-menu-item:hover{\n        background-color: #f6f6f6 !important;\n    }\n\n    .logo {\n        width: 59%;\n        margin-right: 10px;\n    }\n\n    .el-aside {\n        text-align: left;\n    }\n\n    .panel {\n        background-color: #ffffff;\n        margin: 10px;\n        padding: 10px 20px;\n        border-radius: 4px;\n        border: solid 1px var(--grey_200A);\n        text-align: left;\n        border: 1px solid #dfdfdf;\n    }\n\n    .panel-form {\n        width: 400px;\n        margin: 100px auto;\n    }\n\n    .el-message-box {\n        font-family: 'Roboto', Helvetica, Arial, sans-serif;\n    }\n\n    .el-popover {\n        font-family: 'Roboto', Helvetica, Arial, sans-serif;\n    }\n\n    .el-message__content {\n        font-family: 'Roboto', Helvetica, Arial, sans-serif;\n    }\n\n    .el-main {\n        height: 100%;\n    }\n    .token-management-wrapper{\n        width: 100%;\n        padding: 0 70px 0 80px;\n    }\n</style>\n"]}]}